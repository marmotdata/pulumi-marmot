// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Marmot
{
    [MarmotResourceType("marmot:index:Lineage")]
    public partial class Lineage : global::Pulumi.CustomResource
    {
        [Output("resourceId")]
        public Output<string> ResourceId { get; private set; } = null!;

        [Output("source")]
        public Output<string> Source { get; private set; } = null!;

        [Output("target")]
        public Output<string> Target { get; private set; } = null!;

        [Output("type")]
        public Output<string?> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Lineage resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Lineage(string name, LineageArgs args, CustomResourceOptions? options = null)
            : base("marmot:index:Lineage", name, args ?? new LineageArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Lineage(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("marmot:index:Lineage", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Lineage resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Lineage Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Lineage(name, id, options);
        }
    }

    public sealed class LineageArgs : global::Pulumi.ResourceArgs
    {
        [Input("source", required: true)]
        public Input<string> Source { get; set; } = null!;

        [Input("target", required: true)]
        public Input<string> Target { get; set; } = null!;

        public LineageArgs()
        {
        }
        public static new LineageArgs Empty => new LineageArgs();
    }
}
